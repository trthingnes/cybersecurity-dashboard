// This file is auto-generated by @hey-api/openapi-ts

export const AttributesSchema = {
    type: 'object',
    properties: {
        friendly_name: {
            type: ['string', 'null']
        }
    }
} as const;

export const CheckResultSchema = {
    type: 'object',
    required: ['id', 'risk', 'title', 'summary', 'description', 'mitigation'],
    properties: {
        id: {
            type: 'string'
        },
        risk: {
            '$ref': '#/components/schemas/Risk'
        },
        title: {
            type: 'string'
        },
        summary: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        mitigation: {
            type: 'string'
        }
    }
} as const;

export const InstantSchema = {
    type: 'string',
    format: 'date-time',
    examples: ['2022-03-10T16:15:50Z']
} as const;

export const ReportSchema = {
    type: 'object',
    required: ['timestamp', 'results', 'tier'],
    properties: {
        id: {
            type: ['integer', 'null'],
            format: 'int64'
        },
        timestamp: {
            '$ref': '#/components/schemas/Instant'
        },
        results: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/CheckResult'
            }
        },
        tier: {
            '$ref': '#/components/schemas/Tier'
        },
        tierCompletion: {
            type: 'number',
            format: 'float'
        },
        tierAdvanceIn: {
            type: 'integer',
            format: 'int32'
        }
    }
} as const;

export const RiskSchema = {
    type: 'string',
    enum: ['DISABLED', 'UNKNOWN', 'LOW', 'MODERATE', 'HIGH']
} as const;

export const StateSchema = {
    type: 'object',
    required: ['entity_id', 'state', 'attributes', 'last_changed', 'last_reported', 'last_updated', 'context'],
    properties: {
        entity_id: {
            type: 'string'
        },
        state: {
            type: 'string'
        },
        attributes: {
            '$ref': '#/components/schemas/Attributes'
        },
        last_changed: {
            '$ref': '#/components/schemas/Instant'
        },
        last_reported: {
            '$ref': '#/components/schemas/Instant'
        },
        last_updated: {
            '$ref': '#/components/schemas/Instant'
        },
        context: {
            type: 'object',
            additionalProperties: {
                type: 'string'
            }
        }
    }
} as const;

export const TierSchema = {
    type: 'string',
    enum: ['GOLD', 'SILVER', 'BRONZE']
} as const;